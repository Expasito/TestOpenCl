
void log(int gid, int value){
	printf("GID: %d, Value: %d\n",gid,value);
}


struct vec3{
	float x,y,z;
};

struct Triangle {
	struct vec3 p1, p2, p3;
};

void logVec(int gid, struct vec3 in){
	printf("GID: %d :: (%f, %f, %f)\n",gid, in.x,in.y,in.z);
}


struct vec3 multiply(struct vec3 one, struct vec3 two) {
	struct vec3 temp = {one.x*two.x,one.y*two.y,one.z*two.z};
	return temp;
}

struct vec3 add(struct vec3 one, struct vec3 two) {
	struct vec3 temp = {one.x+two.x, one.y+two.y, one.z+two.z};
	return temp;
}

__kernel void test(__global struct vec3* output, __global struct Triangle* triangles, const int index, const int width, const int height) {
	
	struct Triangle t = triangles[0];

	struct vec3 ret = t.p1;

	int gid = get_global_id(0);

	//logVec(gid, t.p1);
	//logVec(gid, t.p2);
	//logVec(gid, t.p3);

	// we need to convert the gid value to an x and y component
	//int x = gi
	//int y = 

	output[gid] = ret;


}